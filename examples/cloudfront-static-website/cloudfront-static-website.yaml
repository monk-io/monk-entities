# CloudFront Static Website Example
# Demonstrates complete static website hosting with CloudFront CDN and S3 origin

namespace: cloudfront-static-website

# S3 bucket for hosting static website files
website-bucket:
  defines: templates/local/aws-s3/s3-bucket
  region: us-east-1
  bucket_name: "cloudfront-demo-static-website-enhanced"
  versioning: false
  public_read_access: true
  public_write_access: false
  
  # Enable static website hosting
  website_configuration:
    index_document: "index.html"
    error_document: "error.html"
  
  # Public read bucket policy for website files
  bucket_policy:
    policy: "public-read"
  
  # CORS configuration for API calls
  cors_configuration:
    cors_rules:
      - allowed_headers: ["*"]
        allowed_methods: ["GET", "HEAD"]
        allowed_origins: ["*"]
        expose_headers: ["ETag"]
        max_age_seconds: 3000
  
  tags:
    Project: "cloudfront-demo"
    Environment: "development"
    Purpose: "static-website-hosting"

# CloudFront distribution for global content delivery
website-cdn:
  defines: templates/local/aws-cloudfront/cloud-front-distribution
  region: us-east-1
  comment: "CloudFront distribution for static website demo"
  enabled: true
  default_root_object: "index.html"
  
  # S3 website origin configuration (using custom origin for website endpoints)
  origins:
    - id: "s3-website-origin"
      domain_name: "cloudfront-demo-static-website-enhanced.s3-website-us-east-1.amazonaws.com"
      custom_origin_config:
        http_port: 80
        https_port: 443
        origin_protocol_policy: "http-only"  # S3 website endpoints only support HTTP
        origin_ssl_protocols: ["TLSv1.2"]
        origin_read_timeout: 30
        origin_keep_alive_timeout: 5
  
  # Default cache behavior for HTML files
  default_cache_behavior:
    target_origin_id: "s3-website-origin"
    viewer_protocol_policy: "redirect-to-https"
    allowed_methods: ["GET", "HEAD", "OPTIONS"]
    cached_methods: ["GET", "HEAD"]
    forward_cookies: "none"
    forward_query_string: false
    compress: true
    min_ttl: 0
    default_ttl: 300        # 5 minutes for HTML files
    max_ttl: 86400          # 1 day maximum
  
  # Specific cache behaviors for different content types
  cache_behaviors:
    # Static assets (CSS, JS) - long caching
    - path_pattern: "/assets/css/*"
      target_origin_id: "s3-website-origin"
      viewer_protocol_policy: "redirect-to-https"
      allowed_methods: ["GET", "HEAD"]
      cached_methods: ["GET", "HEAD"]
      forward_cookies: "none"
      forward_query_string: false
      compress: true
      min_ttl: 86400         # 1 day minimum
      default_ttl: 2592000   # 30 days
      max_ttl: 31536000      # 1 year maximum
    
    - path_pattern: "/assets/js/*"
      target_origin_id: "s3-website-origin"
      viewer_protocol_policy: "redirect-to-https"
      allowed_methods: ["GET", "HEAD"]
      cached_methods: ["GET", "HEAD"]
      forward_cookies: "none"
      forward_query_string: false
      compress: true
      min_ttl: 86400         # 1 day minimum
      default_ttl: 2592000   # 30 days
      max_ttl: 31536000      # 1 year maximum
    
    # Images - very long caching
    - path_pattern: "/assets/images/*"
      target_origin_id: "s3-website-origin"
      viewer_protocol_policy: "redirect-to-https"
      allowed_methods: ["GET", "HEAD"]
      cached_methods: ["GET", "HEAD"]
      forward_cookies: "none"
      forward_query_string: false
      compress: true
      min_ttl: 2592000       # 30 days minimum
      default_ttl: 7776000   # 90 days
      max_ttl: 31536000      # 1 year maximum
    
    # API simulation - no caching for dynamic content
    - path_pattern: "/api/*"
      target_origin_id: "s3-website-origin"
      viewer_protocol_policy: "redirect-to-https"
      allowed_methods: ["GET", "HEAD", "OPTIONS", "PUT", "POST", "PATCH", "DELETE"]
      cached_methods: ["GET", "HEAD"]
      forward_cookies: "all"
      forward_query_string: true
      forward_headers: ["Authorization", "Content-Type"]
      compress: false
      min_ttl: 0
      default_ttl: 0         # No caching for API
      max_ttl: 0

  # Custom error pages for better user experience
  custom_error_responses:
    - error_code: 404
      response_page_path: "/error.html"
      response_code: 404
      error_caching_min_ttl: 300
    
    - error_code: 403
      response_page_path: "/error.html"
      response_code: 404
      error_caching_min_ttl: 300
    
    - error_code: 500
      response_page_path: "/error.html"
      response_code: 500
      error_caching_min_ttl: 60

  # Custom domain configuration (optional)
  # Uncomment and modify for custom domain setup
  # aliases:
  #   - "demo.yourwebsite.com"
  #   - "www.demo.yourwebsite.com"
  
  # SSL certificate configuration (for custom domains)
  # viewer_certificate:
  #   acm_certificate_arn: "arn:aws:acm:us-east-1:123456789012:certificate/your-cert-id"
  #   ssl_support_method: "sni-only"
  #   minimum_protocol_version: "TLSv1.2_2021"

  # Use default CloudFront certificate
  viewer_certificate:
    cloudfront_default_certificate: true

  # Cost optimization - use edge locations in US, Canada, and Europe only
  price_class: "PriceClass_100"
  
  # Enable IPv6 support
  is_ipv6_enabled: true
  
  # Use HTTP/2 for better performance
  http_version: "http2"

  # Access logging (optional)
  # logging:
  #   enabled: true
  #   bucket: "your-logging-bucket.s3.amazonaws.com"
  #   prefix: "cloudfront-access-logs/"
  #   include_cookies: false

  tags:
    Project: "cloudfront-demo"
    Environment: "development"
    Purpose: "cdn-distribution"

# Process group for orchestrated deployment
cloudfront-demo-stack:
  defines: process-group
  runnable-list:
    - cloudfront-static-website/website-bucket
    - cloudfront-static-website/website-cdn
