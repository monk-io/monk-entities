namespace: objectstorage

storage-account:
  defines: entity
  schema:
    required: [ "subscriptionId", "resourceGroupName" , "accountName", "storageAccountObject" ]
    subscriptionId:
      type: string
    resourceGroupName:
      type: string
    accountName:
      type: string    
    storageAccountObject:
      type: string    
  requires:
    - cloud/azure
  lifecycle:
    create: |
      var createStorageAccount = function(subscriptionId, resourceGroupName, accountName, storageAccountObject) {
         const requestBody = storageAccountObject;
        return azure.put("https://management.azure.com/subscriptions/"+subscriptionId+"/resourceGroups/"+resourceGroupName+"/providers/Microsoft.Storage/storageAccounts/"+accountName+"?api-version=2022-09-01", { "headers": {"Content-Type": "application/json"}, "body": requestBody});
      }
           
      function main(definition, state, context) {
           let res = createStorageAccount(definition.subscriptionId, definition.resourceGroupName, definition.accountName, definition.storageAccountObject );
           console.log(JSON.stringify(res));
           if (res.error) {
             throw new Error(res.error + ", body: " + res.body);
           }
           return {"statusCode": res.statusCode, "primaryEndpoints": res.body};
         }
    purge: |
      var deleteStorageAccount = function(subscriptionId, resourceGroupName, accountName) {
        return azure.delete("https://management.azure.com/subscriptions/"+subscriptionId+"/resourceGroups/"+resourceGroupName+"/providers/Microsoft.Storage/storageAccounts/"+accountName+"?api-version=2022-09-01", { "headers": {"Content-Type": "application/json"}});
      }
      
      function main(definition, state, context) {
        let res = deleteStorageAccount(definition.subscriptionId, definition.resourceGroupName, definition.accountName);
        console.log(JSON.stringify(res));
        if (res.error) {
          throw new Error(res.error + ", body: " + res.body);
        }
        return {"statusCode": res.statusCode};
      }
    getPrimaryEndpoints: |
      var getStorageAccount = function(subscriptionId, resourceGroupName, accountName) {
        return azure.get("https://management.azure.com/subscriptions/"+subscriptionId+"/resourceGroups/"+resourceGroupName+"/providers/Microsoft.Storage/storageAccounts/"+accountName+"?api-version=2022-09-01", { "headers": {"Content-Type": "application/json"}});
      }
      function main(definition, state, context) {
           let res = getStorageAccount(definition.subscriptionId, definition.resourceGroupName, definition.accountName );
           console.log(JSON.stringify(res));
           if (res.error) {
             throw new Error(res.error + ", body: " + res.body);
           }
           return {"statusCode": res.statusCode, "body": res.body};
           console.log(res.body);
         }      