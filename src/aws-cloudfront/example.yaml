namespace: aws-cloudfront-examples

# Basic CloudFront distribution with S3 origin
basic-s3-distribution:
  defines: aws-cloudfront/distribution
  region: us-east-1
  comment: "Basic CloudFront distribution for S3 website"
  enabled: true
  default_root_object: "index.html"
  
  origins:
    - id: "s3-origin"
      domain_name: "my-website-bucket.s3.amazonaws.com"
      s3_origin_config:
        origin_access_identity: ""
  
  default_cache_behavior:
    target_origin_id: "s3-origin"
    viewer_protocol_policy: "redirect-to-https"
    allowed_methods: ["GET", "HEAD"]
    cached_methods: ["GET", "HEAD"]
    forward_cookies: "none"
    forward_query_string: false
    compress: true
    min_ttl: 0
    default_ttl: 86400
    max_ttl: 31536000

  price_class: "PriceClass_100"
  is_ipv6_enabled: true
  http_version: "http2"

  tags:
    Environment: "development"
    Project: "my-website"

---

# Advanced CloudFront distribution with custom origin and multiple cache behaviors
advanced-custom-distribution:
  defines: aws-cloudfront/distribution
  region: us-east-1
  comment: "Advanced CloudFront distribution with custom origin"
  enabled: true
  caller_reference: "advanced-dist-2024"
  
  origins:
    - id: "api-origin"
      domain_name: "api.example.com"
      origin_path: "/v1"
      custom_origin_config:
        http_port: 80
        https_port: 443
        origin_protocol_policy: "https-only"
        origin_ssl_protocols: ["TLSv1.2"]
        origin_read_timeout: 30
        origin_keep_alive_timeout: 5
      connection_attempts: 3
      connection_timeout: 10
    
    - id: "static-origin"
      domain_name: "static.example.com"
      custom_origin_config:
        http_port: 80
        https_port: 443
        origin_protocol_policy: "redirect-to-https"
  
  default_cache_behavior:
    target_origin_id: "static-origin"
    viewer_protocol_policy: "redirect-to-https"
    allowed_methods: ["GET", "HEAD", "OPTIONS"]
    cached_methods: ["GET", "HEAD"]
    forward_cookies: "none"
    forward_query_string: false
    compress: true
    min_ttl: 0
    default_ttl: 86400
    max_ttl: 31536000

  cache_behaviors:
    - path_pattern: "/api/*"
      target_origin_id: "api-origin"
      viewer_protocol_policy: "https-only"
      allowed_methods: ["GET", "HEAD", "OPTIONS", "PUT", "POST", "PATCH", "DELETE"]
      cached_methods: ["GET", "HEAD"]
      forward_cookies: "all"
      forward_query_string: true
      forward_headers: ["Authorization", "Content-Type"]
      compress: false
      min_ttl: 0
      default_ttl: 0
      max_ttl: 0
    
    - path_pattern: "/images/*"
      target_origin_id: "static-origin"
      viewer_protocol_policy: "redirect-to-https"
      allowed_methods: ["GET", "HEAD"]
      cached_methods: ["GET", "HEAD"]
      forward_cookies: "none"
      forward_query_string: false
      compress: true
      min_ttl: 86400
      default_ttl: 604800
      max_ttl: 31536000

  custom_error_responses:
    - error_code: 404
      response_page_path: "/error-pages/404.html"
      response_code: 404
      error_caching_min_ttl: 300
    
    - error_code: 500
      response_page_path: "/error-pages/500.html"
      response_code: 500
      error_caching_min_ttl: 60

  aliases:
    - "cdn.example.com"
    - "www.example.com"

  viewer_certificate:
    cloudfront_default_certificate: false
    acm_certificate_arn: "arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012"
    ssl_support_method: "sni-only"
    minimum_protocol_version: "TLSv1.2_2021"

  price_class: "PriceClass_All"
  is_ipv6_enabled: true
  http_version: "http2"

  logging:
    enabled: true
    bucket: "my-cloudfront-logs.s3.amazonaws.com"
    prefix: "access-logs/"
    include_cookies: false

  tags:
    Environment: "production"
    Project: "my-app"
    Team: "frontend"

---

# Simple distribution for single page application
spa-distribution:
  defines: aws-cloudfront/distribution
  region: us-east-1
  comment: "CloudFront distribution for React SPA"
  enabled: true
  default_root_object: "index.html"
  
  origins:
    - id: "spa-s3-origin"
      domain_name: "my-spa-bucket.s3.us-west-2.amazonaws.com"
      s3_origin_config:
        origin_access_identity: ""
  
  default_cache_behavior:
    target_origin_id: "spa-s3-origin"
    viewer_protocol_policy: "redirect-to-https"
    allowed_methods: ["GET", "HEAD"]
    cached_methods: ["GET", "HEAD"]
    forward_cookies: "none"
    forward_query_string: false
    compress: true
    min_ttl: 0
    default_ttl: 300
    max_ttl: 86400

  # Custom error response to handle SPA routing
  custom_error_responses:
    - error_code: 404
      response_page_path: "/index.html"
      response_code: 200
      error_caching_min_ttl: 0
    
    - error_code: 403
      response_page_path: "/index.html"
      response_code: 200
      error_caching_min_ttl: 0

  price_class: "PriceClass_100"
  is_ipv6_enabled: true
  http_version: "http2"

  tags:
    Environment: "staging"
    Project: "my-spa"
    Type: "spa"
