namespace: redis-cloud-example

essentials-subscription:
  defines: redis-cloud/subscription
  account_key_secret: redis-cloud-account-key
  user_key_secret: redis-cloud-user-key
  subscription_type: essentials
  name: Essentials-Subscription
  #plan_id: 20927 # 30MB Free AWS us-east-1
  size: 30
  provider: AWS
  region: us-east-1
  redis_flex: false
  availability: No replication
  support_data_persistence: false
  support_instant_and_daily_backups: false
  support_replication: false
  support_clustering: false
  support_ssl: false
  #  payment_method: credit-card # Payment info is not allowed for free plans
  #  payment_method_id: 42073
  #  OR
  #  payment_method_type: Visa
  permitted-secrets:
    redis-cloud-account-key: true
    redis-cloud-user-key: true
  services:
    subscription:
      protocol: custom

essentials-database:
  defines: redis-cloud/essentials-database
  subscription_id: <- connection-target("subscription") entity-state get-member("id")
  account_key_secret: redis-cloud-account-key
  user_key_secret: redis-cloud-user-key
  password_secret_ref: redis-cloud-db-password
  name: Essentials-database
  permitted-secrets:
    redis-cloud-account-key: true
    redis-cloud-user-key: true
    redis-cloud-db-password: true
  services:
    db:
      protocol: custom
  connections:
    subscription:
      runnable: redis-cloud-example/essentials-subscription
      service: subscription
  depends:
    wait-for:
      runnables:
        - redis-cloud-example/essentials-subscription
      timeout: 60

redis-client:
  defines: runnable
  permitted-secrets:
    redis-cloud-db-password: true
  connections:
    db:
      runnable: redis-cloud-example/essentials-database
      service: db
  depends:
    wait-for:
      runnables:
        - redis-cloud-example/essentials-database
      timeout: 180
  variables:
    redis_db:
      env: REDIS_DB
      value: <- connection-target("db") entity get-member("name")
      type: string
    redis_password_secret:
      value: <- connection-target("db") entity get-member("password_secret_ref")
      type: string
    redis_password:
      env: REDIS_PASSWORD
      value: <- secret("redis-cloud-db-password")
      type: string
    redis_user:
      env: REDIS_USER
      value: <- connection-target("db") entity-state get-member("username")
      type: string
    redis_addr:
      env: REDIS_ADDR
      value: <- connection-target("db") entity-state get-member("publicEndpoint")
      type: string
    redis_host:
      env: REDIS_HOST
      value: <- connection-target("db") entity-state get-member("publicEndpointHost")
      type: string
    redis_port:
      env: REDIS_PORT
      value: <- connection-target("db") entity-state get-member("publicEndpointPort")
      type: string

  containers:
    redis:
      image: docker.io/library/redis:latest
      entrypoint: sleep 36000

stack:
  defines: process-group
  runnable-list:
    - redis-cloud-example/redis-client
    - redis-cloud-example/redis-database
    - redis-cloud-example/redis-subscription 