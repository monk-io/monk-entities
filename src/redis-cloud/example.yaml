namespace: redis-cloud

redis-subscription:
  defines: redis-cloud/subscription
  account_key_secret: redis-cloud-account-key
  user_key_secret: redis-cloud-user-key
  subscription_type: essentials
  name: My-Fixed-Subscription
  #plan_id: 20927 # 30MB Free AWS us-east-1
  size: 30
  provider: AWS
  region: us-east-1
  redis_flex: false
  availability: No replication
  support_data_persistence: false
  support_instant_and_daily_backups: false
  support_replication: false
  support_clustering: false
  support_ssl: false
  #  payment_method: credit-card # Payment info is not allowed for free plans
  #  payment_method_id: 42073
  #  OR
  #  payment_method_type: Visa
  permitted-secrets:
    redis-cloud-account-key: true
    redis-cloud-user-key: true
  services:
    subscription:
      protocol: custom

redis-database:
  defines: redis-cloud/essentials-database
  subscription_id: <- connection-target("redis-cloud-subscription") entity-state get-member("id")
  account_key_secret: redis-cloud-account-key
  user_key_secret: redis-cloud-user-key
  password_secret: redis-cloud-db-password
  name: Redis-database-minimal
  permitted-secrets:
    redis-cloud-account-key: true
    redis-cloud-user-key: true
    redis-cloud-db-password: true
  services:
    db:
      protocol: custom
  connections:
    redis-cloud-subscription:
      runnable: redis-cloud/redis-subscription
      service: subscription
  depends:
    wait-for:
      runnables:
        - redis-cloud/redis-subscription
      timeout: 60
  checks:
    readiness:
      period: 5
      initialDelay: 10
      attempts: 24

redis-client:
  defines: runnable
  permitted-secrets:
    redis-cloud-db-password: true
  connections:
    redis-cloud-db:
      runnable: redis-cloud/redis-database
      service: db
  depends:
    wait-for:
      runnables:
        - redis-cloud/redis-database
      timeout: 180
  variables:
    redis_cloud_db_name:
      env: DB_NAME
      value: <- connection-target("redis-cloud-db") entity get-member("name")
      type: string
    redis_cloud_db_secret:
      value: <- connection-target("redis-cloud-db") entity get-member("password_secret")
      type: string
    redis_cloud_db_password:
      env: DB_PASSWORD
      value: <- secret($redis_cloud_db_secret)
      type: string
    redis_cloud_db_user:
      env: DB_USER
      value: <- connection-target("redis-cloud-db") entity-state get-member("username")
      type: string
    redis_cloud_db_addr:
      env: DB_ADDR
      value: <- connection-target("redis-cloud-db") entity-state get-member("publicEndpoint")
      type: string
    redis_cloud_db_host:
      env: DB_HOST
      value: <- connection-target("redis-cloud-db") entity-state get-member("publicEndpointHost")
      type: string
    redis_cloud_db_port:
      env: DB_PORT
      value: <- connection-target("redis-cloud-db") entity-state get-member("publicEndpointPort")
      type: string
    image-tag:
      value: redis:7-alpine
      type: string
  containers:
    redis:
      image: docker.io/library/redis:7-alpine
      entrypoint: |
        bash -c "
        echo 'Connecting to Redis Cloud database...'
        echo 'Host: $DB_HOST'
        echo 'Port: $DB_PORT'
        echo 'User: $DB_USER'
        redis-cli -h $DB_HOST -p $DB_PORT -a $DB_PASSWORD --no-auth-warning ping
        sleep 36000
        "

stack:
  defines: process-group
  runnable-list:
    - redis-cloud/redis-client
    - redis-cloud/redis-database
    - redis-cloud/redis-subscription 