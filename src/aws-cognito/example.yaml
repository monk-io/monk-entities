namespace: my-app

# Basic Identity Pool for AWS credentials access
basic-identity-pool:
  defines: aws-cognito/identity-pool
  region: us-east-1
  identity_pool_name: my-app-identity-pool
  allow_unauthenticated_identities: false
  identity_pool_tags:
    Environment: production
    Application: my-app

# Advanced Identity Pool with multiple login providers
advanced-identity-pool:
  defines: aws-cognito/identity-pool
  region: us-east-1
  identity_pool_name: my-app-advanced-identity-pool
  allow_unauthenticated_identities: true
  allow_classic_flow: false
  
  # Cognito User Pool authentication
  cognito_identity_providers:
    - ProviderName: cognito-idp.us-east-1.amazonaws.com/us-east-1_example
      ClientId: your-user-pool-client-id
      ServerSideTokenCheck: true
  
  # Social login providers
  supported_login_providers:
    accounts.google.com: your-google-client-id
    www.amazon.com: your-amazon-client-id
    graph.facebook.com: your-facebook-app-id
  
  # SAML and OpenID Connect providers
  saml_providers:
    - arn:aws:iam::123456789012:saml-provider/ExampleProvider
  openid_connect_provider_arns:
    - arn:aws:iam::123456789012:oidc-provider/example.com
  
  identity_pool_tags:
    Environment: production
    Application: my-app
    AuthType: federated

# Basic User Pool for simple authentication
basic-user-pool:
  defines: aws-cognito/user-pool
  region: us-east-1
  pool_name: my-app-users
  mfa_configuration: OPTIONAL
  auto_verified_attributes:
    - email
  username_attributes:
    - email
  tags:
    Environment: production
    Application: my-app

# Advanced User Pool with comprehensive configuration
advanced-user-pool:
  defines: aws-cognito/user-pool
  region: us-east-1
  pool_name: my-app-advanced-users
  mfa_configuration: ON
  
  # Custom user attributes
  schema:
    - Name: department
      AttributeDataType: String
      Required: false
      Mutable: true
      StringAttributeConstraints:
        MinLength: "1"
        MaxLength: "50"
    - Name: employee_id
      AttributeDataType: Number
      Required: true
      Mutable: false
      NumberAttributeConstraints:
        MinValue: "1"
        MaxValue: "999999"
    - Name: hire_date
      AttributeDataType: DateTime
      Required: false
      Mutable: true

  # Strong password policy
  password_policy:
    MinimumLength: 12
    RequireUppercase: true
    RequireLowercase: true
    RequireNumbers: true
    RequireSymbols: true
    TemporaryPasswordValidityDays: 3

  # Admin-only user creation
  admin_create_user_config:
    AllowAdminCreateUserOnly: true
    UnusedAccountValidityDays: 30
    InviteMessageAction: EMAIL
    TemporaryPasswordValidityDays: 7

  # Device security
  device_configuration:
    ChallengeRequiredOnNewDevice: true
    DeviceOnlyRememberedOnUserPrompt: true

  # Email configuration using SES
  email_configuration:
    EmailSendingAccount: DEVELOPER
    SourceArn: arn:aws:ses:us-east-1:123456789012:identity/noreply@myapp.com
    ReplyToEmailAddress: support@myapp.com
    From: MyApp <noreply@myapp.com>

  # Auto-verification and sign-in options
  auto_verified_attributes:
    - email
    - phone_number
  username_attributes:
    - email
    - phone_number
  alias_attributes:
    - preferred_username

  # Custom verification messages
  verification_message_template:
    EmailSubject: "Verify your MyApp account"
    EmailMessage: "Please verify your account by clicking this link: {##Verify Email##}"
    DefaultEmailOption: "CONFIRM_WITH_LINK"

  # Account recovery options
  account_recovery_setting:
    RecoveryMechanisms:
      - Priority: 1
        Name: verified_email
      - Priority: 2
        Name: verified_phone_number

  # Username case sensitivity
  username_configuration:
    CaseSensitive: false

  # Advanced security features
  user_pool_add_ons:
    AdvancedSecurityMode: ENFORCED

  # Attribute update verification
  user_attribute_update_settings:
    AttributesRequireVerificationBeforeUpdate:
      - email
      - phone_number

  # Tags
  tags:
    Environment: production
    Application: my-app
    SecurityLevel: high
    Team: backend

# Development User Pool with relaxed settings
dev-user-pool:
  defines: aws-cognito/user-pool
  region: us-east-1
  pool_name: my-app-dev-users
  mfa_configuration: OFF
  
  # Simple password policy for development
  password_policy:
    MinimumLength: 8
    RequireUppercase: false
    RequireLowercase: true
    RequireNumbers: true
    RequireSymbols: false
    TemporaryPasswordValidityDays: 7

  # Allow self-registration
  admin_create_user_config:
    AllowAdminCreateUserOnly: false
    UnusedAccountValidityDays: 7
    InviteMessageAction: EMAIL

  # Auto-verification
  auto_verified_attributes:
    - email
  username_attributes:
    - email

  # Simple account recovery
  account_recovery_setting:
    RecoveryMechanisms:
      - Priority: 1
        Name: verified_email

  # Tags
  tags:
    Environment: development
    Application: my-app
    SecurityLevel: low

# Basic User Pool Client for web applications
basic-user-pool-client:
  defines: aws-cognito/user-pool-client
  region: us-east-1
  user_pool_id: <- `my-app-users.pool_id`
  client_name: my-app-web-client
  generate_secret: false
  explicit_auth_flows:
    - ALLOW_USER_SRP_AUTH
    - ALLOW_REFRESH_TOKEN_AUTH
  token_validity_units:
    AccessToken: hours
    IdToken: hours
    RefreshToken: days
  access_token_validity: 1
  id_token_validity: 1
  refresh_token_validity: 30

# Advanced User Pool Client with OAuth/OIDC configuration
oauth-user-pool-client:
  defines: aws-cognito/user-pool-client
  region: us-east-1
  user_pool_id: <- `my-app-users.pool_id`
  client_name: my-app-oauth-client
  generate_secret: true
  
  # Authentication flows
  explicit_auth_flows:
    - ALLOW_USER_SRP_AUTH
    - ALLOW_USER_PASSWORD_AUTH
    - ALLOW_REFRESH_TOKEN_AUTH
  
  # OAuth configuration
  allowed_oauth_flows_user_pool_client: true
  allowed_oauth_flows:
    - code
    - implicit
  allowed_oauth_scopes:
    - openid
    - email
    - profile
    - aws.cognito.signin.user.admin
  
  # Callback and logout URLs
  callback_urls:
    - https://myapp.com/auth/callback
    - https://localhost:3000/auth/callback
  logout_urls:
    - https://myapp.com/auth/logout
    - https://localhost:3000/auth/logout
  default_redirect_uri: https://myapp.com/auth/callback
  
  # Token validity (shorter for OAuth)
  token_validity_units:
    AccessToken: minutes
    IdToken: minutes
    RefreshToken: days
  access_token_validity: 60
  id_token_validity: 60
  refresh_token_validity: 7
  
  # Attribute permissions
  read_attributes:
    - email
    - email_verified
    - name
    - family_name
    - given_name
    - preferred_username
  write_attributes:
    - email
    - name
    - family_name
    - given_name
    - preferred_username
  
  # Security settings
  prevent_user_existence_errors: ENABLED
  enable_token_revocation: true
  auth_session_validity: 3

# Mobile app client with native flows
mobile-user-pool-client:
  defines: aws-cognito/user-pool-client
  region: us-east-1
  user_pool_id: <- `my-app-users.pool_id`
  client_name: my-app-mobile-client
  generate_secret: false  # Public client for mobile
  
  # Mobile-optimized auth flows
  explicit_auth_flows:
    - ALLOW_USER_SRP_AUTH
    - ALLOW_REFRESH_TOKEN_AUTH
    - ALLOW_CUSTOM_AUTH
  
  # Custom deep link callback URLs
  callback_urls:
    - myapp://auth/callback
    - https://myapp.com/mobile/callback
  logout_urls:
    - myapp://auth/logout
    - https://myapp.com/mobile/logout
  
  # Longer token validity for mobile
  token_validity_units:
    AccessToken: hours
    IdToken: hours
    RefreshToken: days
  access_token_validity: 8
  id_token_validity: 8
  refresh_token_validity: 60
  
  # Mobile-specific attributes
  read_attributes:
    - email
    - email_verified
    - name
    - preferred_username
    - custom:department
  write_attributes:
    - name
    - preferred_username
  
  # Enhanced security for mobile
  prevent_user_existence_errors: ENABLED
  enable_token_revocation: true
  enable_propagate_additional_user_context_data: true
  auth_session_validity: 15

# Server-to-server client with credentials flow
server-user-pool-client:
  defines: aws-cognito/user-pool-client
  region: us-east-1
  user_pool_id: <- `my-app-users.pool_id`
  client_name: my-app-server-client
  generate_secret: true  # Required for server-to-server
  
  # Server auth flows only
  explicit_auth_flows:
    - ALLOW_ADMIN_USER_PASSWORD_AUTH
    - ALLOW_REFRESH_TOKEN_AUTH
  
  # OAuth client credentials flow
  allowed_oauth_flows_user_pool_client: true
  allowed_oauth_flows:
    - client_credentials
  allowed_oauth_scopes:
    - aws.cognito.signin.user.admin
  
  # Short-lived tokens for server use
  token_validity_units:
    AccessToken: minutes
    IdToken: minutes
    RefreshToken: hours
  access_token_validity: 30
  id_token_validity: 30
  refresh_token_validity: 2
  
  # Full attribute access for admin operations
  read_attributes:
    - email
    - email_verified
    - name
    - family_name
    - given_name
    - preferred_username
    - custom:department
    - custom:employee_id
  write_attributes:
    - email
    - name
    - family_name
    - given_name
    - preferred_username
    - custom:department
  
  # Maximum security
  prevent_user_existence_errors: ENABLED
  enable_token_revocation: true
  auth_session_validity: 5

# Google Social Identity Provider
google-identity-provider:
  defines: aws-cognito/identity-provider
  region: us-east-1
  user_pool_id: <- `my-app-users.user_pool_id`
  provider_name: Google
  provider_type: Google
  provider_details:
    client_id: your-google-client-id.apps.googleusercontent.com
    client_secret: your-google-client-secret
    authorize_scopes: email openid profile
  attribute_mapping:
    email: email
    given_name: given_name
    family_name: family_name
    name: name
    picture: picture

# Facebook Social Identity Provider
facebook-identity-provider:
  defines: aws-cognito/identity-provider
  region: us-east-1
  user_pool_id: <- `my-app-users.user_pool_id`
  provider_name: Facebook
  provider_type: Facebook
  provider_details:
    client_id: your-facebook-app-id
    client_secret: your-facebook-app-secret
    api_version: v12.0
    authorize_scopes: email,public_profile
  attribute_mapping:
    email: email
    given_name: first_name
    family_name: last_name
    name: name
    picture: picture

# Corporate SAML Identity Provider
corporate-saml-provider:
  defines: aws-cognito/identity-provider
  region: us-east-1
  user_pool_id: <- `my-app-users.user_pool_id`
  provider_name: CorporateAD
  provider_type: SAML
  provider_details:
    MetadataURL: https://your-company.com/federationmetadata/2007-06/federationmetadata.xml
    SSORedirectBindingURI: https://your-company.com/adfs/ls/
    SLORedirectBindingURI: https://your-company.com/adfs/ls/
  attribute_mapping:
    email: http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress
    given_name: http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname
    family_name: http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname
    name: http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name
    custom:department: http://schemas.xmlsoap.org/ws/2005/05/identity/claims/department
    custom:employee_id: http://schemas.xmlsoap.org/ws/2005/05/identity/claims/employeeid
  idp_identifiers:
    - urn:your-company:adfs:services:trust

# OpenID Connect Identity Provider
oidc-identity-provider:
  defines: aws-cognito/identity-provider
  region: us-east-1
  user_pool_id: <- `my-app-users.user_pool_id`
  provider_name: CustomOIDC
  provider_type: OIDC
  provider_details:
    client_id: your-oidc-client-id
    client_secret: your-oidc-client-secret
    attributes_request_method: GET
    oidc_issuer: https://your-oidc-provider.com
    authorize_scopes: openid email profile
    authorize_url: https://your-oidc-provider.com/auth
    token_url: https://your-oidc-provider.com/token
    attributes_url: https://your-oidc-provider.com/userinfo
    jwks_uri: https://your-oidc-provider.com/.well-known/jwks.json
  attribute_mapping:
    email: email
    email_verified: email_verified
    given_name: given_name
    family_name: family_name
    name: name
    preferred_username: preferred_username
  idp_identifiers:
    - your-oidc-provider.com

# Sign in with Apple Identity Provider
apple-identity-provider:
  defines: aws-cognito/identity-provider
  region: us-east-1
  user_pool_id: <- `my-app-users.user_pool_id`
  provider_name: SignInWithApple
  provider_type: SignInWithApple
  provider_details:
    client_id: com.yourcompany.yourapp
    team_id: YOUR_APPLE_TEAM_ID
    key_id: YOUR_APPLE_KEY_ID
    private_key: |
      -----BEGIN PRIVATE KEY-----
      YOUR_PRIVATE_KEY_CONTENT_HERE
      -----END PRIVATE KEY-----
    authorize_scopes: email name
  attribute_mapping:
    email: email
    given_name: firstName
    family_name: lastName
    name: name

# Amazon Login Identity Provider
amazon-identity-provider:
  defines: aws-cognito/identity-provider
  region: us-east-1
  user_pool_id: <- `my-app-users.user_pool_id`
  provider_name: LoginWithAmazon
  provider_type: LoginWithAmazon
  provider_details:
    client_id: amzn1.application-oa2-client.your-client-id
    client_secret: your-amazon-client-secret
    authorize_scopes: profile
  attribute_mapping:
    email: email
    given_name: given_name
    family_name: family_name
    name: name
