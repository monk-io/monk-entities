// Generated by MonkEC - targeting Goja runtime
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// input/digitalocean-domains/common.ts
var common_exports = {};
__export(common_exports, {
  DODomainsEntity: () => DODomainsEntity
});
module.exports = __toCommonJS(common_exports);
var import_base = require("monkec/base");
var digitalocean = require("cloud/digitalocean");
var DODomainsEntity = class extends import_base.MonkEntity {
  get(path) {
    const response = digitalocean.get(path, {
      headers: {
        "Accept": "application/json"
      }
    });
    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(`DigitalOcean API error: ${response.statusCode} ${response.status} - ${response.body || ""}`);
    }
    return response.body ? JSON.parse(response.body) : {};
  }
  post(path, body) {
    const options = {
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };
    if (body) {
      options.body = JSON.stringify(body);
    }
    const response = digitalocean.post(path, options);
    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(`DigitalOcean API error: ${response.statusCode} ${response.status} - ${response.body || ""}`);
    }
    return response.body ? JSON.parse(response.body) : {};
  }
  put(path, body) {
    const options = {
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };
    if (body) {
      options.body = JSON.stringify(body);
    }
    const response = digitalocean.put(path, options);
    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(`DigitalOcean API error: ${response.statusCode} ${response.status} - ${response.body || ""}`);
    }
    return response.body ? JSON.parse(response.body) : {};
  }
  deleteRequest(path) {
    const response = digitalocean.delete(path, {
      headers: {
        "Accept": "application/json"
      }
    });
    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(`DigitalOcean API error: ${response.statusCode} ${response.status} - ${response.body || ""}`);
    }
    return response.body ? JSON.parse(response.body) : {};
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  DODomainsEntity
});
