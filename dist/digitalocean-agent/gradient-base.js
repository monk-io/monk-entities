// Generated by MonkEC - targeting Goja runtime
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);

// input/digitalocean-agent/gradientBase.ts
var gradient_base_exports = {};
__export(gradient_base_exports, {
  GradientAgentBase: () => GradientAgentBase
});
module.exports = __toCommonJS(gradient_base_exports);
var import_base = require("monkec/base");
var import_cli = __toESM(require("cli"));
var import_secret = __toESM(require("secret"));
var digitalocean = require("cloud/digitalocean");
var GradientAgentBase = class extends import_base.MonkEntity {
  constructor() {
    super(...arguments);
    __publicField(this, "agentEndpoint");
    __publicField(this, "agentAccessKey");
  }
  before() {
    const endpointRef = this.definition.agent_endpoint_secret_ref || "gradient-agent-endpoint";
    const keyRef = this.definition.agent_access_key_secret_ref || "gradient-agent-access-key";
    const endpoint = import_secret.default.get(endpointRef);
    const accessKey = import_secret.default.get(keyRef);
    if (!endpoint || !accessKey) {
      throw new Error(`Missing Gradient agent credentials in secrets: endpoint=${endpointRef}, access_key=${keyRef}`);
    }
    this.agentEndpoint = endpoint.replace(/\/$/, "");
    this.agentAccessKey = accessKey;
    import_cli.default.output(`Gradient Agent creds loaded (refs: endpoint=${endpointRef}, access_key=${keyRef})`);
  }
  request(method, path, body) {
    const fullPath = path.startsWith("/") ? path : `/${path}`;
    const url = `${this.agentEndpoint}${fullPath}`;
    const options = {
      method,
      headers: {
        "Authorization": `Bearer ${this.agentAccessKey}`,
        "Accept": "application/json",
        "Content-Type": "application/json"
      }
    };
    if (body !== void 0) {
      options.body = typeof body === "string" ? body : JSON.stringify(body);
    }
    const resp = digitalocean.do(url, options);
    if (resp.statusCode < 200 || resp.statusCode >= 300) {
      throw new Error(`Gradient agent ${method} ${fullPath} failed: ${resp.statusCode} ${resp.status} - ${resp.body || ""}`);
    }
    try {
      return resp.body ? JSON.parse(resp.body) : {};
    } catch {
      return resp.body;
    }
  }
};
__publicField(GradientAgentBase, "readiness", { period: 10, initialDelay: 1, attempts: 30 });
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  GradientAgentBase
});
