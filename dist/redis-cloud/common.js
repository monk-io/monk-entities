// Generated by MonkEC - targeting Goja runtime
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// input/redis-cloud/common.ts
var common_exports = {};
__export(common_exports, {
  BASE_URL: () => BASE_URL,
  CONTENT_TYPE: () => CONTENT_TYPE,
  DEFAULT_POLLING_INTERVAL: () => DEFAULT_POLLING_INTERVAL,
  DEFAULT_TASK_TIMEOUT: () => DEFAULT_TASK_TIMEOUT,
  createAuthString: () => createAuthString,
  getCredentials: () => getCredentials
});
module.exports = __toCommonJS(common_exports);
var import_secret = __toESM(require("secret"));
var BASE_URL = "https://api.redislabs.com/v1";
var CONTENT_TYPE = "application/json";
var DEFAULT_TASK_TIMEOUT = 600;
var DEFAULT_POLLING_INTERVAL = 5e3;
function getCredentials(secretRef) {
  const accessKeySecret = import_secret.default.get(secretRef + "_access_key");
  const secretKeySecret = import_secret.default.get(secretRef + "_secret_key");
  if (!accessKeySecret || !secretKeySecret) {
    throw new Error(`Redis Cloud credentials not found. Expected secrets: ${secretRef}_access_key and ${secretRef}_secret_key`);
  }
  return { accessKey: accessKeySecret, secretKey: secretKeySecret };
}
function createAuthString(accessKey, secretKey) {
  return btoa(`${accessKey}:${secretKey}`);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  BASE_URL,
  CONTENT_TYPE,
  DEFAULT_POLLING_INTERVAL,
  DEFAULT_TASK_TIMEOUT,
  createAuthString,
  getCredentials
});
