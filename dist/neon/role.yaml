namespace: neon
role:
  defines: entity
  metadata:
    name: Role
    version-hash: 188a99a3ae63
  schema:
    secret_ref:
      type: string
      minLength: 1
      maxLength: 24
      description: Secret Reference for Neon API authentication
    project-id:
      type: string
      description: 'The Neon project ID (format: project-name-123456)'
    branch-id:
      type: string
      description: 'The Neon branch ID (format: br-name-123456)'
    name:
      type: string
      description: Name for the database role
    can-login:
      type: boolean
      description: 'If false, creates a NOLOGIN role for permission management'
      default: true
    password-secret-name:
      type: string
      description: Name of the secret to store the role's password
      default: app-user-password
    required:
      - secret_ref
      - projectId
      - branchId
      - name
  state-schema:
    existing:
      type: boolean
      description: Indicates if the resource already existed before this entity managed it
    name:
      type: string
      description: Name of the database role
    password:
      type: string
      description: Generated password for the role
    protected:
      type: boolean
      description: 'If true, role cannot be modified/deleted'
    createdAt:
      type: string
      format: date-time
      description: When the role was created
    updatedAt:
      type: string
      format: date-time
      description: When the role was last updated
    operationId:
      type: string
      description: ID of the operation that created the role
  lifecycle:
    sync: <<< role-sync.js
    reset-role-password: ''
  checks:
    readiness:
      period: 15
      initialDelay: 2
      attempts: 20
  requires:
    - monkec/base
    - neon/neon-base
    - secret
    - cli
