namespace: aws

s3-bucket:
  defines: entity
  metadata:
    name: Amazon S3 Bucket
    description: |
      Amazon Simple Storage Service (Amazon S3) is an object storage service offering industry-leading scalability, data availability, security, and performance. Customers of all sizes and industries can store and protect any amount of data for virtually any use case, such as data lakes, cloud-native applications, and mobile apps. With cost-effective storage classes and easy-to-use management features, you can optimize costs, organize data, and configure fine-tuned access controls to meet specific business, organizational, and compliance requirements.
    website: https://aws.amazon.com/s3/
    icon: https://www.svgrepo.com/show/349587/amazon-s3.svg
    publisher: monk.io
    tags: AWS, S3, Bucket, Amazon, Entities
  schema:
    required: [ "name", "region" ]
    name:
      type: string
    region:
      type: string
  requires:
    - cloud/aws
  lifecycle:
    create: |
      createBucket = function(name, region) {
        return aws.put("https://"+name+".s3.amazonaws.com", {"service": "s3", "region": region, "headers": {"x-amz-acl": "public-read"}})
      }
      
      function main(definition, state, context) {
        res = createBucket(definition.name, definition.region)
        console.log(JSON.stringify(res))
        if (res.error) {
          throw new Error(res.error)
        }
        return {"statusCode": res.statusCode}
      }
    purge: |
      deleteBucket = function(name, region) {
        return aws.delete("https://"+name+".s3.amazonaws.com", {"service": "s3", "region": region})
      }
      
      function main(definition, state, context) {
        res = deleteBucket(definition.name, definition.region)
        console.log(JSON.stringify(res))
        if (res.error) {
          throw new Error(res.error)
        }
        return {"statusCode": res.statusCode}
      }
    presign: |
      var cli = require("cli")
      
      presignUpload = function(name, region, path) {
        return aws.presign("https://"+name+".s3.amazonaws.com" + path, {"method": "PUT", "expire": "5m", "service": "s3", "region": region, "headers": {"x-amz-acl": "public-read"}})
      }
      
      function main(definition, state, context) {
        let {url, headers} = presignUpload(definition.name, definition.region, context.args.path)
        cli.output("Pre-signed URL:", decodeURI(url))
        if (headers) {
          cli.output("Pre-signed headers", JSON.stringify(headers))
        }
      }
